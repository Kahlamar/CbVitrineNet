# ConnectionString SSMS
# Server=localhost,5002;User Id=sa;Password=MotDePasse!;Encrypt=false; pour se connecter a SQL Server a partir de l'hote
# Server=sqlservervitrine,1433;Database=Vitrine;User Id=sa;Password=MotDePasse!;Encrypt=False;pour requeter la BDD a partir d'un container
# Admin123456!

volumes:
  sqlservervitrine_data:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
  postgresql:
  postgresql_data:

services:
  cbvitrinenet:
    container_name: cbvitrinenet
    build:
      context: .
      dockerfile: CbVitrineNet/Dockerfile
    ports:
      - 5000:8080
    depends_on:
      - vitrineapi
      - sqlservervitrine
  vitrineapi:
    container_name: vitrineapi
    build:
      context: .
      dockerfile: VitrineApi/Dockerfile
    ports:
      - 5001:8080
    depends_on:
      - sqlservervitrine
  sqlservervitrine:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      - SA_PASSWORD=MotDePasse!
      - ACCEPT_EULA=Y
    ports:
      - "5002:1433" #Server=localhost,5002;User Id=sa;Password=MotDePasse!;Encrypt=false;
    volumes:
      - sqlservervitrine_data:/var/opt/mssql
  sonarqube:
    image: sonarqube:community
    depends_on:
      - db
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://db:5432/sonar
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
    ports:
      - 9000:9000
  db:
    image: postgres:12
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
    volumes:
      - postgresql:/var/lib/postgresql
      - postgresql_data:/var/lib/postgresql/data
