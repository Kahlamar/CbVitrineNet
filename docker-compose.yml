# ConnectionString SSMS
# Server=localhost,5002;User Id=sa;Password=MotDePasse!;Encrypt=false;
# Server=sqlservervitrine,1433;Database=Vitrine;User Id=sa;Password=MotDePasse!;Encrypt=False;
# Admin123456!

volumes:
  sqlservervitrine_data:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
  postgresql:
  postgresql_data:
  mongo_data:

services:
  cbvitrinenet:
    container_name: cbvitrinenet
    build:
      context: .
      dockerfile: CbVitrineNet/Dockerfile
    ports:
      - 5000:8080
    depends_on:
      - vitrineapi
      - sqlservervitrine
  vitrineapi:
    container_name: vitrineapi
    build:
      context: .
      dockerfile: VitrineApi/Dockerfile
    ports:
      - 5001:8080
    depends_on:
      - sqlservervitrine
      - mongodb
  sqlservervitrine:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      - SA_PASSWORD=MotDePasse!
      - ACCEPT_EULA=Y
    ports:
      - 5002:1433
    volumes:
      - sqlservervitrine_data:/var/opt/mssql
  # sonarqube:
  #   image: sonarqube:community
  #   depends_on:
  #     - dbsonar
  #   environment:
  #     SONAR_JDBC_URL: jdbc:postgresql://dbsonar:5432/sonar
  #     SONAR_JDBC_USERNAME: sonar
  #     SONAR_JDBC_PASSWORD: sonar
  #   volumes:
  #     - sonarqube_data:/opt/sonarqube/data
  #     - sonarqube_extensions:/opt/sonarqube/extensions
  #     - sonarqube_logs:/opt/sonarqube/logs
  #   ports:
  #     - 9000:9000
  # dbsonar:
  #   image: postgres:12
  #   environment:
  #     POSTGRES_USER: sonar
  #     POSTGRES_PASSWORD: sonar
  #   volumes:
  #     - postgresql:/var/lib/postgresql
  #     - postgresql_data:/var/lib/postgresql/data
  # redis:
  #   image: redis:7
  #   container_name: redis
  #   ports:
  #     - 6379:6379
  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - 27017:27017
    volumes:
      - mongo_data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
